name: Release

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - Cargo.toml
      - docs/**
      - docs/package.json

permissions:
  contents: read

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
      - name: Install semantic-release and plugins
        run: npm install -g semantic-release @semantic-release/github @semantic-release/git @semantic-release/changelog
      - name: Get next version
        id: get_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "version=$(semantic-release --dry-run | grep "Release note for version" | sed -n 's/.*Release note for version \([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')" >> $GITHUB_OUTPUT
      - name: Update Cargo.toml
        run: |
          sed -i'' -e "s/^version = .*/version = \"${{ steps.get_version.outputs.version }}\"/" Cargo.toml
      - name: Update package.json
        run: |
          sed -i'' -e "s/\"version\": \".*\"/\"version\": \"${{ steps.get_version.outputs.version }}\"/" package.json
        working-directory: docs
      - uses: actions/upload-artifact@v4
        with:
          name: cargo_toml
          path: Cargo.toml
      - uses: actions/upload-artifact@v4
        with:
          name: package_json
          path: docs/package.json

  build:
    name: Build
    needs: init
    strategy:
      matrix:
        platform:
          - runs-on: macos-latest
            target: x86_64-apple-darwin
          - runs-on: macos-latest
            target: aarch64-apple-darwin
          - runs-on: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runs-on: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - runs-on: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/download-artifact@v4
        with:
          name: cargo_toml
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: snaptui-${{ matrix.platform.target }}
          path: |
            target/${{ matrix.platform.target }}/release/snaptui
            target/${{ matrix.platform.target }}/release/snaptui.exe

  docs:
    name: Docs
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/download-artifact@v4
        with:
          name: package_json
          path: docs/
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
      - name: Install Docusaurus dependencies
        run: npm install
        working-directory: docs
      - name: Build Docusaurus site
        run: npm run build
        working-directory: docs
      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/

  release:
    name: release
    runs-on: ubuntu-latest
    needs: [build, docs]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: write
      id-token: write
      pages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
      - name: Install semantic-release and plugins
        run: npm install -g semantic-release @semantic-release/github @semantic-release/git @semantic-release/changelog
      - uses: actions/download-artifact@v4
        with:
          name: cargo_toml
      - uses: actions/download-artifact@v4
        with:
          name: package_json
          path: docs/
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds
          pattern: snaptui-*
          merge-multiple: false
      - name: Rename binaries
        run: |
          for file in builds/*-*; do
            if [[ -f "$file/snaptui" ]]; then
              mv "$file/snaptui" "$file/$(basename "$file")"
            elif [[ -f "$file/snaptui.exe" ]]; then
              mv "$file/snaptui.exe" "$file/$(basename "$file").exe"
            fi
          done
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
  
  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [init, release]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Qemu
        uses: docker/setup-qemu-action@v3
      - name: Buildx
        uses: docker/setup-buildx-action@v3
      - name: Publish
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            SNAPTUI_VERSION=v${{ needs.init.outputs.version }}
            CREATED_DATE=${{ github.event.head_commit.timestamp }}
          tags: |
            ghcr.io/open-sori/snaptui:latest
            ghcr.io/open-sori/snaptui:v${{ needs.init.outputs.version }}
          push: true
